{"ast":null,"code":"var _jsxFileName = \"/home/pratham/Documents/Vector shift/frontend/src/nodes/textNode.js\";\n// // textNode.js\n\n// import { useState } from 'react';\n// import { Handle, Position } from 'reactflow';\n\n// export const TextNode = ({ id, data }) => {\n//   const [currText, setCurrText] = useState(data?.text || '{{input}}');\n\n//   const handleTextChange = (e) => {\n//     setCurrText(e.target.value);\n//   };\n\n//   return (\n//     <div style={{width: 200, height: 80, border: '1px solid black'}}>\n//       <div>\n//         <span>Text</span>\n//       </div>\n//       <div>\n//         <label>\n//           Text:\n//           <input\n//             type=\"text\"\n//             value={currText}\n//             onChange={handleTextChange}\n//           />\n//         </label>\n//       </div>\n//       <Handle\n//         type=\"source\"\n//         position={Position.Right}\n//         id={`${id}-output`}\n//       />\n//     </div>\n//   );\n// }\n// textNode.js\nimport { BaseNode } from \"./BaseNode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextNode = ({\n  id,\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    title: \"Text\",\n    data: data,\n    inputs: [{\n      label: \"Text\",\n      key: \"text\",\n      type: \"text\"\n    }],\n    rightHandles: [{\n      id: `${id}-output`,\n      style: {}\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = TextNode;\nvar _c;\n$RefreshReg$(_c, \"TextNode\");","map":{"version":3,"names":["BaseNode","jsxDEV","_jsxDEV","TextNode","id","data","title","inputs","label","key","type","rightHandles","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pratham/Documents/Vector shift/frontend/src/nodes/textNode.js"],"sourcesContent":["// // textNode.js\n\n// import { useState } from 'react';\n// import { Handle, Position } from 'reactflow';\n\n// export const TextNode = ({ id, data }) => {\n//   const [currText, setCurrText] = useState(data?.text || '{{input}}');\n\n//   const handleTextChange = (e) => {\n//     setCurrText(e.target.value);\n//   };\n\n//   return (\n//     <div style={{width: 200, height: 80, border: '1px solid black'}}>\n//       <div>\n//         <span>Text</span>\n//       </div>\n//       <div>\n//         <label>\n//           Text:\n//           <input\n//             type=\"text\"\n//             value={currText}\n//             onChange={handleTextChange}\n//           />\n//         </label>\n//       </div>\n//       <Handle\n//         type=\"source\"\n//         position={Position.Right}\n//         id={`${id}-output`}\n//       />\n//     </div>\n//   );\n// }\n// textNode.js\nimport { BaseNode } from \"./BaseNode\";\n\nexport const TextNode = ({ id, data }) => {\n  return (\n    <BaseNode\n      id={id}\n      title=\"Text\"\n      data={data}\n      inputs={[{ label: \"Text\", key: \"text\", type: \"text\" }]}\n      rightHandles={[{ id: `${id}-output`, style: {} }]}\n    />\n  );\n};\n"],"mappings":";AAAA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,EAAE;EAAEC;AAAK,CAAC,KAAK;EACxC,oBACEH,OAAA,CAACF,QAAQ;IACPI,EAAE,EAAEA,EAAG;IACPE,KAAK,EAAC,MAAM;IACZD,IAAI,EAAEA,IAAK;IACXE,MAAM,EAAE,CAAC;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAE;IACvDC,YAAY,EAAE,CAAC;MAAEP,EAAE,EAAG,GAAEA,EAAG,SAAQ;MAAEQ,KAAK,EAAE,CAAC;IAAE,CAAC;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEN,CAAC;AAACC,EAAA,GAVWd,QAAQ;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}