[{"/home/pratham/Documents/Vector shift/frontend/src/index.js":"1","/home/pratham/Documents/Vector shift/frontend/src/App.js":"2","/home/pratham/Documents/Vector shift/frontend/src/toolbar.js":"3","/home/pratham/Documents/Vector shift/frontend/src/submit.js":"4","/home/pratham/Documents/Vector shift/frontend/src/ui.js":"5","/home/pratham/Documents/Vector shift/frontend/src/draggableNode.js":"6","/home/pratham/Documents/Vector shift/frontend/src/store.js":"7","/home/pratham/Documents/Vector shift/frontend/src/nodes/inputNode.js":"8","/home/pratham/Documents/Vector shift/frontend/src/nodes/llmNode.js":"9","/home/pratham/Documents/Vector shift/frontend/src/nodes/outputNode.js":"10","/home/pratham/Documents/Vector shift/frontend/src/nodes/textNode.js":"11","/home/pratham/Documents/Vector shift/frontend/src/nodes/BaseNode.js":"12"},{"size":254,"mtime":1694985860000,"results":"13","hashOfConfig":"14"},{"size":269,"mtime":1694985918000,"results":"15","hashOfConfig":"14"},{"size":552,"mtime":1694983634000,"results":"16","hashOfConfig":"14"},{"size":551,"mtime":1728670824002,"results":"17","hashOfConfig":"14"},{"size":3362,"mtime":1694987000000,"results":"18","hashOfConfig":"14"},{"size":942,"mtime":1694985108000,"results":"19","hashOfConfig":"14"},{"size":1336,"mtime":1694984778000,"results":"20","hashOfConfig":"14"},{"size":1746,"mtime":1728664520000,"results":"21","hashOfConfig":"14"},{"size":1291,"mtime":1728665082000,"results":"22","hashOfConfig":"14"},{"size":1763,"mtime":1728664634000,"results":"23","hashOfConfig":"14"},{"size":1144,"mtime":1728664652000,"results":"24","hashOfConfig":"14"},{"size":2942,"mtime":1728671162388,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"t4zyku",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pratham/Documents/Vector shift/frontend/src/index.js",[],[],[],"/home/pratham/Documents/Vector shift/frontend/src/App.js",[],[],"/home/pratham/Documents/Vector shift/frontend/src/toolbar.js",[],[],"/home/pratham/Documents/Vector shift/frontend/src/submit.js",[],[],"/home/pratham/Documents/Vector shift/frontend/src/ui.js",["64"],[],"// ui.js\n// Displays the drag-and-drop UI\n// --------------------------------------------------\n\nimport { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/inputNode';\nimport { LLMNode } from './nodes/llmNode';\nimport { OutputNode } from './nodes/outputNode';\nimport { TextNode } from './nodes/textNode';\n\nimport 'reactflow/dist/style.css';\n\nconst gridSize = 20;\nconst proOptions = { hideAttribution: true };\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode,\n};\n\nconst selector = (state) => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect,\n});\n\nexport const PipelineUI = () => {\n    const reactFlowWrapper = useRef(null);\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\n    const {\n      nodes,\n      edges,\n      getNodeID,\n      addNode,\n      onNodesChange,\n      onEdgesChange,\n      onConnect\n    } = useStore(selector, shallow);\n\n    const getInitNodeData = (nodeID, type) => {\n      let nodeData = { id: nodeID, nodeType: `${type}` };\n      return nodeData;\n    }\n\n    const onDrop = useCallback(\n        (event) => {\n          event.preventDefault();\n    \n          const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n          if (event?.dataTransfer?.getData('application/reactflow')) {\n            const appData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n            const type = appData?.nodeType;\n      \n            // check if the dropped element is valid\n            if (typeof type === 'undefined' || !type) {\n              return;\n            }\n      \n            const position = reactFlowInstance.project({\n              x: event.clientX - reactFlowBounds.left,\n              y: event.clientY - reactFlowBounds.top,\n            });\n\n            const nodeID = getNodeID(type);\n            const newNode = {\n              id: nodeID,\n              type,\n              position,\n              data: getInitNodeData(nodeID, type),\n            };\n      \n            addNode(newNode);\n          }\n        },\n        [reactFlowInstance]\n    );\n\n    const onDragOver = useCallback((event) => {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'move';\n    }, []);\n\n    return (\n        <>\n        <div ref={reactFlowWrapper} style={{width: '100wv', height: '70vh'}}>\n            <ReactFlow\n                nodes={nodes}\n                edges={edges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                onConnect={onConnect}\n                onDrop={onDrop}\n                onDragOver={onDragOver}\n                onInit={setReactFlowInstance}\n                nodeTypes={nodeTypes}\n                proOptions={proOptions}\n                snapGrid={[gridSize, gridSize]}\n                connectionLineType='smoothstep'\n            >\n                <Background color=\"#aaa\" gap={gridSize} />\n                <Controls />\n                <MiniMap />\n            </ReactFlow>\n        </div>\n        </>\n    )\n}\n","/home/pratham/Documents/Vector shift/frontend/src/draggableNode.js",[],[],"/home/pratham/Documents/Vector shift/frontend/src/store.js",[],[],"/home/pratham/Documents/Vector shift/frontend/src/nodes/inputNode.js",[],[],"/home/pratham/Documents/Vector shift/frontend/src/nodes/llmNode.js",[],[],"/home/pratham/Documents/Vector shift/frontend/src/nodes/outputNode.js",[],[],"/home/pratham/Documents/Vector shift/frontend/src/nodes/textNode.js",[],[],"/home/pratham/Documents/Vector shift/frontend/src/nodes/BaseNode.js",[],[],{"ruleId":"65","severity":1,"message":"66","line":83,"column":9,"nodeType":"67","endLine":83,"endColumn":28,"suggestions":"68"},"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'addNode' and 'getNodeID'. Either include them or remove the dependency array.","ArrayExpression",["69"],{"desc":"70","fix":"71"},"Update the dependencies array to be: [addNode, getNodeID, reactFlowInstance]",{"range":"72","text":"73"},[2396,2415],"[addNode, getNodeID, reactFlowInstance]"]